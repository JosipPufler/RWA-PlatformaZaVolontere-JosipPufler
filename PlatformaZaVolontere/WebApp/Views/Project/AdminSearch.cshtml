@using WebApp.Models.ViewModels
@model SearchVM

@{
    ViewData["Title"] = "Index";
    var skillSetList = ViewBag.SkillSets;
    var projectTypes = ViewBag.ProjectTypes;
}

<h1>List of Projects</h1>
<a asp-action="Create" class="btn btn-outline-primary">Create New</a>

<form asp-action="AdminSearch" method="GET">
    <div class="row">
        <div class="col-8">
            <input asp-for="Q" class="form-control" placeholder="Search projects" />
        </div>
        <div class="col-auto">
            <label class="form-label mt-1">Type:</label>
        </div>
        <div class="col-auto">
            <select asp-for="OrderBy" class="form-select">
                <option value="0">(default)</option>
                @foreach (ProjectTypeVM type in projectTypes)
                {
                    <option value="@type.IdprojectType">@Html.DisplayFor(modelItem => type.Name)</option>
                }
            </select>
        </div>
        <div class="col-auto">
            <select asp-for="Size" class="form-select">
                <option>3</option>
                <option>5</option>
                <option>10</option>
                <option>20</option>
                <option>50</option>
            </select>
        </div>
        <div class="col-auto">
            <input type="submit" value="Go" name="submit" class="btn btn-primary" />
        </div>
    </div>
</form>
<div id="searchPartialPlaceholder">
    <partial name="_AdminSearchPartial" />
</div>

@section Scripts {
    <script>
        $("body").on("click", "a.page-link", function (e) {
            e.preventDefault();

            const urlParts = e.target.href.split("?");
            const base = urlParts[0];
            const query = urlParts.length > 1 ? urlParts[1] : null;
            if (query) {
                $("#searchPartialPlaceholder").load(`${base}Partial?${query}`);
            } else {
                $("#searchPartialPlaceholder").load(`${base}Partial`);
            }
        })
    </script>
}